{"version":3,"file":"static/js/569.012a01ab.chunk.js","mappings":"+MA8FA,UAxFqB,SAAAA,GAAuB,IAAD,EACzC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAb,UAAiB,SAAjB,EAA4B,IAEpCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAKSK,MAAM,GAAD,OAFG,gCAEH,gCAHE,mCAGF,4DACoFL,IAE7FM,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GACN,OAAOD,EAAIE,MAEd,IACAH,MAAK,SAAAC,GACCA,EAAIG,QAAQC,OAMff,EAAUW,EAAIG,SALdE,EAAAA,GAAAA,MACE,8DAML,IACAC,OAAM,SAAAC,GAAK,OAAIF,EAAAA,GAAAA,MAAA,UAAeE,EAAMC,SAAzB,GAvBE,CA2BnB,GAAE,CAACf,IAgBJ,OACE,iCACE,gBAAKgB,UAAU,kBAAf,UACE,kBAAMA,UAAU,aAAaC,SAjBd,SAAAC,GAGnB,GAFAA,EAAEC,iBAEmC,KAAjCD,EAAEE,OAAOC,SAASC,KAAKC,MAA3B,CAKA,IAAMC,EAAON,EAAEO,cACf1B,EAAgB,CAAEC,MAAOwB,EAAKH,SAASC,KAAKC,MAAMG,SAElDF,EAAKG,OALJ,MAFCf,EAAAA,GAAAA,KAAW,+BAQd,EAKK,WACE,kBACEI,UAAU,oBACVY,KAAK,OACLC,KAAK,OACL,aAAW,SACX,mBAAiB,gBACjBC,YAAY,SACZC,WAAS,KAEX,mBAAQf,UAAU,4BAA4BY,KAAK,SAAnD,yBAMHjC,IACC,eAAIqB,UAAU,kCAAd,SACGrB,EAAOqC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,CAEEC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMnC,GACfc,UAAU,kBAJZ,SAMGkB,GALID,EAFG,QAcrB,C","sources":["components/SearchMovies/SearchMovies.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst SearchMovies = createSearchMovies => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('movie' ?? '');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movie) return;\n\n    const API_KEY = '70f59e22c7b6a563dca5a024c7d2f94b';\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n    const getSearchMovies = () => {\n      return fetch(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movie}`\n      )\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          }\n        })\n        .then(res => {\n          if (!res.results.length) {\n            toast.error(\n              \"We don't have any movies matching this search. Try again...\"\n            );\n            return;\n          } else {\n            setMovies(res.results);\n          }\n        })\n        .catch(error => toast.error(`${error.message}`));\n    };\n\n    getSearchMovies();\n  }, [movie]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (e.target.elements.text.value === '') {\n      toast.info('Enter the title of the movie');\n      return;\n    }\n\n    const form = e.currentTarget;\n    setSearchParams({ movie: form.elements.text.value.trim() });\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <form className=\"d-flex m-5\" onSubmit={handleSubmit}>\n          <input\n            className=\"form-control me-2\"\n            type=\"text\"\n            name=\"text\"\n            aria-label=\"Search\"\n            aria-describedby=\"button-addon2\"\n            placeholder=\"Search\"\n            autoFocus\n          />\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n\n      {movies && (\n        <ul className=\"list-group list-group-flush m-5\">\n          {movies.map(({ id, title }) => (\n            <Link\n              key={id}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className=\"list-group-item\"\n            >\n              {title}\n            </Link>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default SearchMovies;\n"],"names":["createSearchMovies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movie","get","location","useLocation","useEffect","fetch","then","res","ok","json","results","length","toast","catch","error","message","className","onSubmit","e","preventDefault","target","elements","text","value","form","currentTarget","trim","reset","type","name","placeholder","autoFocus","map","id","title","to","state","from"],"sourceRoot":""}