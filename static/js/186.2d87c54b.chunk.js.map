{"version":3,"file":"static/js/186.2d87c54b.chunk.js","mappings":"gNA0CA,UApCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GAAG,OAAIN,EAAWM,EAAIC,QAAnB,IACRC,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAA,4CAAJ,GACf,GAAE,CAACT,KAGF,iCACE,kBACCF,EAAQY,OAAS,IAChB,wBACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAASC,GAAZ,EAAOC,IAAP,EAAYD,QAAQE,EAApB,EAAoBA,QAApB,OACX,2BACE,gBAAKC,UAAU,mBAAf,UACE,gBAAIA,UAAU,kBAAkBJ,GAAG,iBAAnC,oBACUC,QAGZ,gBAAKG,UAAU,iBAAf,SAAiCD,MAN1BH,EADE,OAYfd,EAAQY,SACR,cAAGM,UAAU,MAAb,wDAEF,oBAGL,C,+HCxCD,IAAMC,EAAU,mCACVC,EAAW,gCAEJC,EAAc,WACzB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IACrDb,MAAK,SAAAC,GACJ,GAAIA,EAAIgB,GACN,OAAOhB,EAAIiB,MAEd,GACF,EAEYnB,EAAa,SAAAH,GACxB,OAAOoB,MAAM,GAAD,OACPF,EADO,iBACUlB,EADV,4BACqCiB,EADrC,2BAEVb,MAAK,SAAAC,GACL,GAAIA,EAAIgB,GACN,OAAOhB,EAAIiB,MAEd,GACF,EAEYC,EAAa,SAACvB,GACzB,OAAOoB,MAAM,GAAD,OACPF,EADO,iBACUlB,EADV,oBAC6BiB,EAD7B,oBAGTb,MAAK,SAAAC,GACJ,GAAIA,EAAIgB,GACN,OAAOhB,EAAIiB,MAEd,GACJ,EAEYE,EAAkB,SAAAxB,GAC7B,OAAOoB,MAAM,GAAD,OACPF,EADO,iBACUlB,EADV,4BACqCiB,EADrC,oBAEVb,MAAK,SAAAC,GACL,GAAIA,EAAIgB,GACN,OAAOhB,EAAIiB,MAEd,GACF,C","sources":["components/Reviews/Reviews.jsx","services/get-trending-api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/get-trending-api';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(res => setReviews(res.results))\n      .catch(error => toast.error(`We don't have any reviews for this movie.`));\n  }, [movieId]);\n\n  return (\n    <>\n      <hr></hr>\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(({ id, url, author, content }) => (\n            <li key={id}>\n              <div className=\"offCanvas-header\">\n                <h5 className=\"offCanvas-title\" id=\"offCanvasLabel\">\n                  Author:{author}\n                </h5>\n              </div>\n              <div className=\"offCanvas-body\">{content}</div>\n            </li>\n          ))}\n        </ul>\n      )}\n      {!reviews.length && (\n        <p className=\"m-5\">We don't have any reviews for this movie.</p>\n      )}\n      <hr></hr>\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '70f59e22c7b6a563dca5a024c7d2f94b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n  .then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\n\nexport const getReviews = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\n\nexport const getDetails = (movieId) => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  )\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    })\n};\n\nexport const getMovieCredits = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  });\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","res","results","catch","error","toast","length","map","id","author","url","content","className","API_KEY","BASE_URL","getTrending","fetch","ok","json","getDetails","getMovieCredits"],"sourceRoot":""}